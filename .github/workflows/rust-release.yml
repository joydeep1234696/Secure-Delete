name: Build and Package

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  build:
    name: Build and Package (${{ matrix.os }}, ${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions/setup-rust@v2
        with:
          rust-version: stable
          target: ${{ matrix.target }}

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifact
        shell: bash
        run: |
          mkdir -p dist
          BIN="target/${{ matrix.target }}/release/secure_delete"
          if [[ "${{ matrix.os }}" == "Windows" ]]; then
            BIN="${BIN}.exe"
          fi
          OUT="dist/$(basename "$BIN")"
          cp "$BIN" "$OUT" || exit 1
          strip "$OUT" || true

      - name: Package zip
        run: |
          cd dist
          if [ "${{ matrix.os }}" = "Windows" ]; then
            pwsh -Command "Compress-Archive -Path secure_delete.exe -DestinationPath secure_delete-windows.zip"
          elif [ "${{ matrix.os }}" = "macOS" ]; then
            zip -j secure_delete-macos.zip secure_delete
          else
            zip -j secure_delete-linux.zip secure_delete
          fi

      - name: Generate SHA256 checksum
        run: |
          cd dist
          for f in *.zip; do
            base_name=$(basename "$f" .zip)
            sha256sum "$f" > "${base_name}.sha256"
          done

      - name: Import GPG key
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import

      - name: Sign artifacts
        run: |
          cd dist
          for f in *.zip *.sha256; do
            gpg --batch --yes --detach-sign --armor "$f"
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: secure_delete-${{ matrix.os }}
          path: dist/*
