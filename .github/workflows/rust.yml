name: Secure Delete - Rust Build & Release

on:
  push:
    tags:
      - 'v*.*.*'   # e.g. v0.1.0, v1.2.3
  workflow_dispatch:

jobs:
  build:
    name: Build and Package
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: secure_delete-linux
            ext: ''
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: secure_delete-windows
            ext: .exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: secure_delete-macos
            ext: ''

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build in release mode
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifact
        shell: bash
        run: |
          mkdir -p dist
          BIN="target/${{ matrix.target }}/release/secure_delete${{ matrix.ext }}"
          OUT="dist/${{ matrix.artifact_name }}${{ matrix.ext }}"
          cp "$BIN" "$OUT"
          strip "$OUT" || true
          cd dist
          zip "${{ matrix.artifact_name }}.zip" "${{ matrix.artifact_name }}${{ matrix.ext }}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: dist/${{ matrix.artifact_name }}.zip

  release:
    name: Publish GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: release_binaries

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: release_binaries/**/*.zip
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
