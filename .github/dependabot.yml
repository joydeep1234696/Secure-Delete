version: 2
updates:
  # ────────────────────────────────
  # 1. Rust / Cargo Dependencies
  # ────────────────────────────────
  - package-ecosystem: "cargo"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "sunday"
      time: "03:00"
      timezone: "Europe/London"
    allow:
      - dependency-type: "all"   # both direct and indirect dependencies
    versioning-strategy: "auto"
    open-pull-requests-limit: 10
    commit-message:
      prefix: "deps(cargo)"
      include: "scope"
    labels:
      - "dependencies"
      - "rust"
    reviewers:
      - "whisprer"
    assignees:
      - "whisprer"
    ignore:
      # ignore certain updates that can break builds (common for nightly features)
      - dependency-name: "clippy"
      - dependency-name: "rustc"
      - dependency-name: "cargo"

  # ────────────────────────────────
  # 2. GitHub Actions Workflow Dependencies
  # ────────────────────────────────
  - package-ecosystem: "github-actions"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "monday"
      time: "02:00"
      timezone: "Europe/London"
    open-pull-requests-limit: 5
    commit-message:
      prefix: "deps(actions)"
      include: "scope"
    labels:
      - "dependencies"
      - "ci"
    reviewers:
      - "whisprer"
    assignees:
      - "whisprer"

  # ────────────────────────────────
  # 3. System Packages (Optional for CI Containers)
  # ────────────────────────────────
  # If your CI or Docker build relies on apt packages, uncomment this block.
  # - package-ecosystem: "docker"
  #   directory: "/"
  #   schedule:
  #     interval: "monthly"
  #     day: "tuesday"
  #     time: "04:00"
  #     timezone: "Europe/London"
  #   commit-message:
  #     prefix: "deps(docker)"
  #     include: "scope"
  #   labels:
  #     - "dependencies"
  #     - "infra"

  # ────────────────────────────────
  # 4. Security Auditing (Advisory DB refresh)
  # ────────────────────────────────
  # Dependabot will automatically check the RustSec advisory DB for vulnerable crates
  # that match your Cargo.lock. You don’t need to configure this separately, but this block
  # makes it explicit.
  - package-ecosystem: "cargo"
    directory: "/"
    schedule:
      interval: "daily"
    allow:
      - dependency-type: "direct"
    commit-message:
      prefix: "security"
      include: "scope"
    labels:
      - "security"
      - "audit"
    open-pull-requests-limit: 3
    reviewers:
      - "whisprer"
